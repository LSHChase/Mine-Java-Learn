Regular Expression
	组成：特殊字符（元字符），普通文本字符
	完整的正则表达式由小的构建模块单元组成
	检索文本文件Egrep
	Egrep元字符
		脱字符号'^'：一行的开始（行锚点）
		美元符号'$'：一行的结束
		连字符'-'：表示一个范围  H[1-6]等价于H[123456]，表示H1-H6都还可以匹配
				  只有在字符组内部，且不是第一个字符，连字符才是元字符，否则是普通字符
		点号dot或者小点point：用来匹配任意字符的字符组的简单写法，匹配结果容易理解但不够细致
		多选结构
			或字符'|'：把不同的子表达式组合成一个总表达式，总表达式又可以匹配任意的子表达式
					  'gr[ea]y'又等价于'grey|gray'或者'gr(e|a)y'，注意'gr[e|a]y'中的'|'只是普通的字符
		egrep-i命令在匹配时能够不区分大小写
		元字符序列，单词分界符（'\<','\>'）：单纯的'<','>'并不是元字符，只有加了'\'的才是
	字符组：字符组中的字符之间都是或关系，比如[ae]可以匹配a或者e  "gr[ea]y"既匹配grey又匹配gray
		   在字符组的内部和外部元字符的规定是不同的
		   排除型字符组：[^...]匹配所有未列出的字符
		   				^必须是紧接在字符组的第一个方括号之后
		   				匹配一个不等于x的字符，并非该位置没有字符
	字符组只能匹配一个字符，多选项可以匹配任意长度的文本，不过多选项没有字符组的排除功能
	可选项元素（optional）：
		'?'代表可选项，只作用于之前紧邻的元素，单次可选
		'+'加号：之前紧邻的元素出现一次或者多次，至少一次
		'*'星号：之前紧邻的元素出现任意多次，或者不出现，任意次数均可
		'{}'区间：某些版本的egrep用他来自定义重现次数的区间
	'()'括号：限制多选结构，分组，捕获文本
		用途：
			限制多选项的范围；
			将若干字符组合为一个单元，受问号或者星号之类的量词的作用；
			"记住"他们包含的字表达式匹配的文本
		反向引用：正则表达式的特性之一，它容许我们匹配与表达式先前部分匹配的同样的文本
			'\1'特殊的元字符序列：记住括号中子表达式匹配的文本
	"/"转义符：适用于所有元字符，不过在字符组内无效
	"-i"：忽略大小写的匹配

	普通字符：字符之间都是先后顺序（接下来是）
	一些例子：
		变量名：标识符来匹配，例如："[a-zA-Z][a-zA-Z_0-9]{0,31}"
		引号内的字符串：""[^"]*"]"
		美元金额："\$[0,9]+(\.[0,9]+)?"
		HTTP/HTML URL："\<http://[-a-z0-9_.:]+/[-a-z0-9_:@&?=+,.!/~*%$]*\.html?\>"或者"\<http://[^]*\.html\>"
		HTML tag：<title>
		时刻："(1[012]|[1-9]):[0-5][0-9].(am|pm)"或者"(2[0-3]|[01]?[0-9]):[0-5][0-9]"
	术语汇总
		正则：regex
		匹配：matching
		元字符：metacharacter
		流派：flavor
		工具：tool
		子表达式：subexpression
		字符：character
