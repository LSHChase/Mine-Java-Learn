注解Annotation: 一种应用于类，方法，参数，变量，构造器及包声明中的特殊修饰符
	元数据: 描述数据的数据（XML被广泛的应用于描述元数据）
	xml VS annotation:
		1.若想为应用设置很多的常量或者参数，选择XML，它不会同特定的代码相连；
		2.若想把某个方法声明为服务，选择annotation，这种情况下需要注解和方法紧密耦合；
		3.Annotation定义了一种标准的描述元数据的方式。
	java.lang.annotation中提供了四中元注解，专门解释其他注解:
		@Docemented: 注解是否将包含在JavaDoc中
		@Retention: 该注解的生命周期
			RetentionPolicy.SOURCE: 在编译阶段丢弃，@Override,@SuppressWarnings
			RetentionPolicy.CLASS: 在类加载的时候丢弃，默认使用
			RetentionPolicy.RMNTIME: 始终不会丢弃
		@Target: 该注解用于什么地方，默认任何地方
			ElementType.TYPE: 用于描述类，接口或者enum声明
			ElementType.FIDLD: 用于描述实例变量
			ElementType.METHOD
			ElementType.PARAMETER
			ElementType.CONSTRUCTOR
			ElementType.LOCAL_VARIABLE
			ElementType.ANNOTATION_TYPE: 另一个注释
			ElementType.PACKAGE: 用于记录java文件的package信息
		@Inherited: 定义该注释和子类的关系
	Annotation只支持基本类型、String及枚举类型，注解中所有属性被定义成方法，并允许提供默认值。。。